You are my art + code assistant for **Hoop Dreams – Basketball Life Simulator**.
Extend the head-only avatar system you built earlier with:
1) team-color accessories (auto-tinted headbands/beanies/durags),
2) more hairstyles, and
3) NPC generation rules that keep faces stable and match team colors.

================================
A) ASSETS (add/adjust only)
================================
All images: transparent PNG, 512×512, centered, 24–32px padding.

Folders (same as before) plus:
  /public/avatars/masks

Add these **colorable masks** (pure white shape on transparent; smooth anti-aliased edge):
  masks/headband_mask.png                (simple band across forehead)
  masks/headband_wide_mask.png           (wider version)
  masks/beanie_mask.png                  (bean cap silhouette)
  masks/durag_mask.png                   (front + side tails silhouette)

Keep the existing non-tinted versions for anyone who wants fixed colors,
but prefer tinting the masks at runtime.

=====================
B) MANIFEST UPDATES
=====================
Append these hairstyles (still overlays with NO face):
  "fade_low", "fade_mid", "fade_high", "drop_fade", "burst_fade",
  "fauxhawk", "frohawk", "mohawk_soft", "shag_short",
  "undercut_curly_top", "taper_curl", "taper_waves",
  "short_waves_deep", "twists_medium", "twists_long",
  "locs_high_bun", "locs_taper", "afro_medium_round",
  "afro_high_round", "top_knot"

Keep "bald" as an empty overlay file.

Extend accessories to include **tintable** entries (they reference masks):
  "headband_colorable_narrow",
  "headband_colorable_wide",
  "beanie_colorable",
  "durag_colorable"

Update /public/avatars/manifest.json so it includes the new hair names and accessories above.

=========================
C) COLOR + TINT UTILITIES
=========================
Create /src/lib/color.ts with:
- hexToRgb, rgbToHex, lighten(hex, amt), darken(hex, amt)
- pickContrast(hex) → "#0E0E0E" or "#F6F6F6" based on relative luminance

In /src/lib/avatar.ts add:

```ts
// colorize a white mask PNG with a hex color
export async function tintMask(maskUrl: string, hex: string, size=512): Promise<HTMLCanvasElement> {
  const img = await loadImage(maskUrl); // existing helper or new
  const c = document.createElement('canvas');
  c.width = size; c.height = size;
  const ctx = c.getContext('2d')!;
  // draw the solid color
  ctx.fillStyle = hex;
  ctx.fillRect(0,0,size,size);
  // keep only where mask is opaque
  ctx.globalCompositeOperation = 'destination-in';
  ctx.drawImage(img, 0, 0, size, size);
  ctx.globalCompositeOperation = 'source-over';
  return c;
}